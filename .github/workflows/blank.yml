# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ main ]
#     types: [opened]
#   pull_request:
#     branches: [ main ]
  issue_comment:
    types: [created]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
  comment_trigger_black_code:
    runs-on: ubuntu-latest
    steps:
      - uses: khan/pull-request-comment-trigger@master
        id: check
        with:
          trigger: '//black-code'
          reaction: rocket
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      - if: github.event.issue.pull_request && steps.check.outputs.triggered == 'true'
        uses: actions/checkout@v2
      - if: github.event.issue.pull_request && steps.check.outputs.triggered == 'true'
        uses: actions/setup-python@v2
      - if: github.event.issue.pull_request && steps.check.outputs.triggered == 'true'
        uses: psf/black@stable
      - name: Update source code
        run: eslint "src/**" --fix
      - name: Commit changes
        uses: EndBug/add-and-commit@v7
        with:
          author_name: Your Name
          author_email: mail@example.com
          message: 'Your commit message'
          add: '*.js'
      - if: github.event.issue.pull_request && steps.check.outputs.triggered == 'true'
        name: black code
        run: |
          pull_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          echo "PR number = ${pull_number}"
          URL="https://api.github.com/repos/${{ github.repository }}/pulls/${pull_number}/files"
          FILES=$(curl -s -X GET -G $URL | jq -r '.[] | .filename')
          if echo $FILES | grep -q ".py"; then
            black $FILES
          else
            echo "no file changed, skip!!"
          fi
