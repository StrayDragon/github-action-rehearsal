# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ main ]
# #     types: [opened]
#   pull_request:
#     branches: [ main ]
#     types: [opened]
  pull_request:
    branches: [ main ]
    types: [closed]
    paths:
      - '**/*.py'
  issue_comment:
    types: [created]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  if: github.event.pull_request.merged == true
  comment_trigger_black_code:
    runs-on: ubuntu-latest
    steps:
      - uses: khan/pull-request-comment-trigger@master
        id: check
        with:
          trigger: '//black-code'
          reaction: rocket
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      - if: github.event.issue.pull_request && steps.comment_trigger_black_code.outputs.triggered == 'true'
        uses: actions/checkout@v2
      - if: github.event.issue.pull_request && steps.comment_trigger_black_code.outputs.triggered == 'true'
        uses: actions/setup-python@v2
      - if: github.event.issue.pull_request && steps.comment_trigger_black_code.outputs.triggered == 'true'
        name: black code
        run: |
          echo "Comment on PR #${{ github.event.issue.number }}"
          URL="https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.issue.number }}/files"
          FILES=$(curl -s -X GET -G $URL | jq -r '.[] | .filename')
          pip install black
          ls -la
          if echo $FILES | grep -q ".py"; then
            black ${{ github.workspace }}/$FILES
          else
            echo "no file changed, skip!!"
          fi
#       - name: Commit changes
#         if: github.event.issue.pull_request && steps.check.outputs.triggered == 'true'
#         uses: EndBug/add-and-commit@v7
#         with:
#           author_name: Your Name
#           author_email: mail@example.com
#           message: 'Your commit message'
#           add: '*.py'
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        id: cpr
        if: ${{ steps.comment_trigger_black_code.outputs.updated == 'yes' }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'generate by protoapic'
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          signoff: false
          branch: update-blacked-code
          delete-branch: true
          title: 'Update blacked code'
          body: |
            ðŸ¤– Update `*.py` code by black ðŸ¤–
            Triggered by ${{ github.repository }}#${{ github.event.issue.number }}
            
          labels: |
            robot
          reviewers: ${{ github.actor }}
          draft: false
